// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/rust
{
	"name": "Bindicator",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"build": {
		"dockerfile": "./Dockerfile",
		"args": {
			"CONTAINER_USER": "crab"
		},
	},
	"mounts": [
		"source=${localEnv:HOME}/.ssh,target=/home/crab/.ssh,type=bind,consistency=cached"
	],
	"workspaceMount": "source=${localWorkspaceFolder},target=/home/crab/bindicator,type=bind,consistency=cached",
	"workspaceFolder": "/home/crab/bindicator",
	"customizations": {
		"vscode": {
			"extensions": [
				"mutantdino.resourcemonitor",
				"tamasfe.even-better-toml",
				"rust-lang.rust-analyzer",
				"serayuzgur.crates",
				"streetsidesoftware.code-spell-checker",
				"TechTheAwesome.rust-yew"
			]
		}
	},
	"forwardPorts": [
		8080
	]
	// Use 'mounts' to make the cargo cache persistent in a Docker Volume.
	// "mounts": [
	// 	{
	// 		"source": "devcontainer-cargo-cache-${devcontainerId}",
	// 		"target": "/usr/local/cargo",
	// 		"type": "volume"
	// 	}
	// ]
	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "rustc --version",
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}